ARM GAS  /tmp/cchpvgnZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32f3xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB130:
  28              		.file 1 "core/src/system_stm32f3xx.c"
   1:core/src/system_stm32f3xx.c **** /**
   2:core/src/system_stm32f3xx.c ****   ******************************************************************************
   3:core/src/system_stm32f3xx.c ****   * @file    system_stm32f3xx.c
   4:core/src/system_stm32f3xx.c ****   * @author  MCD Application Team
   5:core/src/system_stm32f3xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:core/src/system_stm32f3xx.c ****   *
   7:core/src/system_stm32f3xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:core/src/system_stm32f3xx.c ****   *    user application:
   9:core/src/system_stm32f3xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:core/src/system_stm32f3xx.c ****   *                      before branch to main program. This call is made inside
  11:core/src/system_stm32f3xx.c ****   *                      the "startup_stm32f3xx.s" file.
  12:core/src/system_stm32f3xx.c ****   *
  13:core/src/system_stm32f3xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:core/src/system_stm32f3xx.c ****   *                                  by the user application to setup the SysTick
  15:core/src/system_stm32f3xx.c ****   *                                  timer or configure other parameters.
  16:core/src/system_stm32f3xx.c ****   *
  17:core/src/system_stm32f3xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:core/src/system_stm32f3xx.c ****   *                                 be called whenever the core clock is changed
  19:core/src/system_stm32f3xx.c ****   *                                 during program execution.
  20:core/src/system_stm32f3xx.c ****   *
  21:core/src/system_stm32f3xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  22:core/src/system_stm32f3xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f3xx.s" file, to
  23:core/src/system_stm32f3xx.c ****   *    configure the system clock before to branch to main program.
  24:core/src/system_stm32f3xx.c ****   *
  25:core/src/system_stm32f3xx.c ****   * 3. This file configures the system clock as follows:
  26:core/src/system_stm32f3xx.c ****   *=============================================================================
  27:core/src/system_stm32f3xx.c ****   *                         Supported STM32F3xx device
  28:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  29:core/src/system_stm32f3xx.c ****   *        System Clock source                    | HSI
  30:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/cchpvgnZ.s 			page 2


  31:core/src/system_stm32f3xx.c ****   *        SYSCLK(Hz)                             | 8000000
  32:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  33:core/src/system_stm32f3xx.c ****   *        HCLK(Hz)                               | 8000000
  34:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  35:core/src/system_stm32f3xx.c ****   *        AHB Prescaler                          | 1
  36:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  37:core/src/system_stm32f3xx.c ****   *        APB2 Prescaler                         | 1
  38:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  39:core/src/system_stm32f3xx.c ****   *        APB1 Prescaler                         | 1
  40:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  41:core/src/system_stm32f3xx.c ****   *        USB Clock                              | DISABLE
  42:core/src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  43:core/src/system_stm32f3xx.c ****   *=============================================================================
  44:core/src/system_stm32f3xx.c ****   ******************************************************************************
  45:core/src/system_stm32f3xx.c ****   * @attention
  46:core/src/system_stm32f3xx.c ****   *
  47:core/src/system_stm32f3xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  48:core/src/system_stm32f3xx.c ****   * All rights reserved.</center></h2>
  49:core/src/system_stm32f3xx.c ****   *
  50:core/src/system_stm32f3xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  51:core/src/system_stm32f3xx.c ****   * the "License"; You may not use this file except in compliance with the
  52:core/src/system_stm32f3xx.c ****   * License. You may obtain a copy of the License at:
  53:core/src/system_stm32f3xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  54:core/src/system_stm32f3xx.c ****   *
  55:core/src/system_stm32f3xx.c ****   ******************************************************************************
  56:core/src/system_stm32f3xx.c ****   */
  57:core/src/system_stm32f3xx.c **** 
  58:core/src/system_stm32f3xx.c **** /** @addtogroup CMSIS
  59:core/src/system_stm32f3xx.c ****   * @{
  60:core/src/system_stm32f3xx.c ****   */
  61:core/src/system_stm32f3xx.c **** 
  62:core/src/system_stm32f3xx.c **** /** @addtogroup stm32f3xx_system
  63:core/src/system_stm32f3xx.c ****   * @{
  64:core/src/system_stm32f3xx.c ****   */
  65:core/src/system_stm32f3xx.c **** 
  66:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Includes
  67:core/src/system_stm32f3xx.c ****   * @{
  68:core/src/system_stm32f3xx.c ****   */
  69:core/src/system_stm32f3xx.c **** 
  70:core/src/system_stm32f3xx.c **** #include "stm32f3xx.h"
  71:core/src/system_stm32f3xx.c **** 
  72:core/src/system_stm32f3xx.c **** /**
  73:core/src/system_stm32f3xx.c ****   * @}
  74:core/src/system_stm32f3xx.c ****   */
  75:core/src/system_stm32f3xx.c **** 
  76:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_TypesDefinitions
  77:core/src/system_stm32f3xx.c ****   * @{
  78:core/src/system_stm32f3xx.c ****   */
  79:core/src/system_stm32f3xx.c **** 
  80:core/src/system_stm32f3xx.c **** /**
  81:core/src/system_stm32f3xx.c ****   * @}
  82:core/src/system_stm32f3xx.c ****   */
  83:core/src/system_stm32f3xx.c **** 
  84:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Defines
  85:core/src/system_stm32f3xx.c ****   * @{
  86:core/src/system_stm32f3xx.c ****   */
  87:core/src/system_stm32f3xx.c **** #if !defined  (HSE_VALUE) 
ARM GAS  /tmp/cchpvgnZ.s 			page 3


  88:core/src/system_stm32f3xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
  89:core/src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  90:core/src/system_stm32f3xx.c **** #endif /* HSE_VALUE */
  91:core/src/system_stm32f3xx.c **** 
  92:core/src/system_stm32f3xx.c **** #if !defined  (HSI_VALUE)
  93:core/src/system_stm32f3xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  94:core/src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  95:core/src/system_stm32f3xx.c **** #endif /* HSI_VALUE */
  96:core/src/system_stm32f3xx.c **** 
  97:core/src/system_stm32f3xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  98:core/src/system_stm32f3xx.c ****          configuration. */
  99:core/src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 100:core/src/system_stm32f3xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 101:core/src/system_stm32f3xx.c ****      remap of boot address selected */
 102:core/src/system_stm32f3xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 103:core/src/system_stm32f3xx.c **** 
 104:core/src/system_stm32f3xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 105:core/src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 106:core/src/system_stm32f3xx.c ****      in Sram else user remap will be done in Flash. */
 107:core/src/system_stm32f3xx.c **** /* #define VECT_TAB_SRAM */
 108:core/src/system_stm32f3xx.c **** #if defined(VECT_TAB_SRAM)
 109:core/src/system_stm32f3xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 110:core/src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 111:core/src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 112:core/src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 113:core/src/system_stm32f3xx.c **** #else
 114:core/src/system_stm32f3xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 115:core/src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 116:core/src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 117:core/src/system_stm32f3xx.c ****                                                      This value must be a multiple of 0x200. */
 118:core/src/system_stm32f3xx.c **** #endif /* VECT_TAB_SRAM */
 119:core/src/system_stm32f3xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 120:core/src/system_stm32f3xx.c **** 
 121:core/src/system_stm32f3xx.c **** /******************************************************************************/
 122:core/src/system_stm32f3xx.c **** /**
 123:core/src/system_stm32f3xx.c ****   * @}
 124:core/src/system_stm32f3xx.c ****   */
 125:core/src/system_stm32f3xx.c **** 
 126:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Macros
 127:core/src/system_stm32f3xx.c ****   * @{
 128:core/src/system_stm32f3xx.c ****   */
 129:core/src/system_stm32f3xx.c **** 
 130:core/src/system_stm32f3xx.c **** /**
 131:core/src/system_stm32f3xx.c ****   * @}
 132:core/src/system_stm32f3xx.c ****   */
 133:core/src/system_stm32f3xx.c **** 
 134:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Variables
 135:core/src/system_stm32f3xx.c ****   * @{
 136:core/src/system_stm32f3xx.c ****   */
 137:core/src/system_stm32f3xx.c ****   /* This variable is updated in three ways:
 138:core/src/system_stm32f3xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 139:core/src/system_stm32f3xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 140:core/src/system_stm32f3xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 141:core/src/system_stm32f3xx.c ****          Note: If you use this function to configure the system clock there is no need to
 142:core/src/system_stm32f3xx.c ****                call the 2 first functions listed above, since SystemCoreClock variable is 
 143:core/src/system_stm32f3xx.c ****                updated automatically.
 144:core/src/system_stm32f3xx.c ****   */
ARM GAS  /tmp/cchpvgnZ.s 			page 4


 145:core/src/system_stm32f3xx.c **** uint32_t SystemCoreClock = 8000000;
 146:core/src/system_stm32f3xx.c **** 
 147:core/src/system_stm32f3xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 148:core/src/system_stm32f3xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 149:core/src/system_stm32f3xx.c **** 
 150:core/src/system_stm32f3xx.c **** /**
 151:core/src/system_stm32f3xx.c ****   * @}
 152:core/src/system_stm32f3xx.c ****   */
 153:core/src/system_stm32f3xx.c **** 
 154:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_FunctionPrototypes
 155:core/src/system_stm32f3xx.c ****   * @{
 156:core/src/system_stm32f3xx.c ****   */
 157:core/src/system_stm32f3xx.c **** 
 158:core/src/system_stm32f3xx.c **** /**
 159:core/src/system_stm32f3xx.c ****   * @}
 160:core/src/system_stm32f3xx.c ****   */
 161:core/src/system_stm32f3xx.c **** 
 162:core/src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Functions
 163:core/src/system_stm32f3xx.c ****   * @{
 164:core/src/system_stm32f3xx.c ****   */
 165:core/src/system_stm32f3xx.c **** 
 166:core/src/system_stm32f3xx.c **** /**
 167:core/src/system_stm32f3xx.c ****   * @brief  Setup the microcontroller system
 168:core/src/system_stm32f3xx.c ****   * @param  None
 169:core/src/system_stm32f3xx.c ****   * @retval None
 170:core/src/system_stm32f3xx.c ****   */
 171:core/src/system_stm32f3xx.c **** void SystemInit(void)
 172:core/src/system_stm32f3xx.c **** {
  29              		.loc 1 172 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 173:core/src/system_stm32f3xx.c **** /* FPU settings --------------------------------------------------------------*/
 174:core/src/system_stm32f3xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 175:core/src/system_stm32f3xx.c ****   SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 175 3 view .LVU1
  35              		.loc 1 175 14 is_stmt 0 view .LVU2
  36 0000 034A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 176:core/src/system_stm32f3xx.c **** #endif
 177:core/src/system_stm32f3xx.c **** 
 178:core/src/system_stm32f3xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 179:core/src/system_stm32f3xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 180:core/src/system_stm32f3xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 181:core/src/system_stm32f3xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 182:core/src/system_stm32f3xx.c **** }
  40              		.loc 1 182 1 view .LVU3
  41 000e 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0010 00ED00E0 		.word	-536810240
  46              		.cfi_endproc
  47              	.LFE130:
ARM GAS  /tmp/cchpvgnZ.s 			page 5


  49              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  50              		.align	1
  51              		.global	SystemCoreClockUpdate
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	SystemCoreClockUpdate:
  57              	.LFB131:
 183:core/src/system_stm32f3xx.c **** 
 184:core/src/system_stm32f3xx.c **** /**
 185:core/src/system_stm32f3xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 186:core/src/system_stm32f3xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 187:core/src/system_stm32f3xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 188:core/src/system_stm32f3xx.c ****   *         other parameters.
 189:core/src/system_stm32f3xx.c ****   *
 190:core/src/system_stm32f3xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 191:core/src/system_stm32f3xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 192:core/src/system_stm32f3xx.c ****   *         based on this variable will be incorrect.
 193:core/src/system_stm32f3xx.c ****   *
 194:core/src/system_stm32f3xx.c ****   * @note   - The system frequency computed by this function is not the real
 195:core/src/system_stm32f3xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 196:core/src/system_stm32f3xx.c ****   *           constant and the selected clock source:
 197:core/src/system_stm32f3xx.c ****   *
 198:core/src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 199:core/src/system_stm32f3xx.c ****   *
 200:core/src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 201:core/src/system_stm32f3xx.c ****   *
 202:core/src/system_stm32f3xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 203:core/src/system_stm32f3xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 204:core/src/system_stm32f3xx.c ****   *
 205:core/src/system_stm32f3xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 206:core/src/system_stm32f3xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 207:core/src/system_stm32f3xx.c ****   *             in voltage and temperature.
 208:core/src/system_stm32f3xx.c ****   *
 209:core/src/system_stm32f3xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 210:core/src/system_stm32f3xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 211:core/src/system_stm32f3xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 212:core/src/system_stm32f3xx.c ****   *              have wrong result.
 213:core/src/system_stm32f3xx.c ****   *
 214:core/src/system_stm32f3xx.c ****   *         - The result of this function could be not correct when using fractional
 215:core/src/system_stm32f3xx.c ****   *           value for HSE crystal.
 216:core/src/system_stm32f3xx.c ****   *
 217:core/src/system_stm32f3xx.c ****   * @param  None
 218:core/src/system_stm32f3xx.c ****   * @retval None
 219:core/src/system_stm32f3xx.c ****   */
 220:core/src/system_stm32f3xx.c **** void SystemCoreClockUpdate (void)
 221:core/src/system_stm32f3xx.c **** {
  58              		.loc 1 221 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 222:core/src/system_stm32f3xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
  63              		.loc 1 222 3 view .LVU5
  64              	.LVL0:
 223:core/src/system_stm32f3xx.c **** 
 224:core/src/system_stm32f3xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
ARM GAS  /tmp/cchpvgnZ.s 			page 6


 225:core/src/system_stm32f3xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  65              		.loc 1 225 3 view .LVU6
  66              		.loc 1 225 12 is_stmt 0 view .LVU7
  67 0000 1D4B     		ldr	r3, .L11
  68 0002 5B68     		ldr	r3, [r3, #4]
  69              		.loc 1 225 7 view .LVU8
  70 0004 03F00C03 		and	r3, r3, #12
  71              	.LVL1:
 226:core/src/system_stm32f3xx.c **** 
 227:core/src/system_stm32f3xx.c ****   switch (tmp)
  72              		.loc 1 227 3 is_stmt 1 view .LVU9
  73 0008 042B     		cmp	r3, #4
  74 000a 14D0     		beq	.L5
  75 000c 082B     		cmp	r3, #8
  76 000e 16D0     		beq	.L6
  77 0010 1BB1     		cbz	r3, .L10
 228:core/src/system_stm32f3xx.c ****   {
 229:core/src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 230:core/src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 231:core/src/system_stm32f3xx.c ****       break;
 232:core/src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 233:core/src/system_stm32f3xx.c ****       SystemCoreClock = HSE_VALUE;
 234:core/src/system_stm32f3xx.c ****       break;
 235:core/src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 236:core/src/system_stm32f3xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 237:core/src/system_stm32f3xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 238:core/src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 239:core/src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 240:core/src/system_stm32f3xx.c **** 
 241:core/src/system_stm32f3xx.c **** #if defined (STM32F302xE) || defined (STM32F303xE) || defined (STM32F398xx)
 242:core/src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 243:core/src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 244:core/src/system_stm32f3xx.c ****       {
 245:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 246:core/src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 247:core/src/system_stm32f3xx.c ****       }
 248:core/src/system_stm32f3xx.c ****       else
 249:core/src/system_stm32f3xx.c ****       {
 250:core/src/system_stm32f3xx.c ****         /* HSI oscillator clock selected as PREDIV1 clock entry */
 251:core/src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE / predivfactor) * pllmull;
 252:core/src/system_stm32f3xx.c ****       }
 253:core/src/system_stm32f3xx.c **** #else      
 254:core/src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSI_DIV2)
 255:core/src/system_stm32f3xx.c ****       {
 256:core/src/system_stm32f3xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 257:core/src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 258:core/src/system_stm32f3xx.c ****       }
 259:core/src/system_stm32f3xx.c ****       else
 260:core/src/system_stm32f3xx.c ****       {
 261:core/src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 262:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 263:core/src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 264:core/src/system_stm32f3xx.c ****       }
 265:core/src/system_stm32f3xx.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx */
 266:core/src/system_stm32f3xx.c ****       break;
 267:core/src/system_stm32f3xx.c ****     default: /* HSI used as system clock */
 268:core/src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
ARM GAS  /tmp/cchpvgnZ.s 			page 7


  78              		.loc 1 268 7 view .LVU10
  79              		.loc 1 268 23 is_stmt 0 view .LVU11
  80 0012 1A4B     		ldr	r3, .L11+4
  81              	.LVL2:
  82              		.loc 1 268 23 view .LVU12
  83 0014 1A4A     		ldr	r2, .L11+8
  84 0016 1A60     		str	r2, [r3]
 269:core/src/system_stm32f3xx.c ****       break;
  85              		.loc 1 269 7 is_stmt 1 view .LVU13
  86 0018 02E0     		b	.L8
  87              	.LVL3:
  88              	.L10:
 230:core/src/system_stm32f3xx.c ****       break;
  89              		.loc 1 230 7 view .LVU14
 230:core/src/system_stm32f3xx.c ****       break;
  90              		.loc 1 230 23 is_stmt 0 view .LVU15
  91 001a 184B     		ldr	r3, .L11+4
  92              	.LVL4:
 230:core/src/system_stm32f3xx.c ****       break;
  93              		.loc 1 230 23 view .LVU16
  94 001c 184A     		ldr	r2, .L11+8
  95 001e 1A60     		str	r2, [r3]
 231:core/src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
  96              		.loc 1 231 7 is_stmt 1 view .LVU17
  97              	.LVL5:
  98              	.L8:
 270:core/src/system_stm32f3xx.c ****   }
 271:core/src/system_stm32f3xx.c ****   /* Compute HCLK clock frequency ----------------*/
 272:core/src/system_stm32f3xx.c ****   /* Get HCLK prescaler */
 273:core/src/system_stm32f3xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  99              		.loc 1 273 3 view .LVU18
 100              		.loc 1 273 28 is_stmt 0 view .LVU19
 101 0020 154B     		ldr	r3, .L11
 102 0022 5B68     		ldr	r3, [r3, #4]
 103              		.loc 1 273 52 view .LVU20
 104 0024 C3F30313 		ubfx	r3, r3, #4, #4
 105              		.loc 1 273 22 view .LVU21
 106 0028 164A     		ldr	r2, .L11+12
 107 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 108              	.LVL6:
 274:core/src/system_stm32f3xx.c ****   /* HCLK clock frequency */
 275:core/src/system_stm32f3xx.c ****   SystemCoreClock >>= tmp;
 109              		.loc 1 275 3 is_stmt 1 view .LVU22
 110              		.loc 1 275 19 is_stmt 0 view .LVU23
 111 002c 134A     		ldr	r2, .L11+4
 112 002e 1368     		ldr	r3, [r2]
 113 0030 CB40     		lsrs	r3, r3, r1
 114 0032 1360     		str	r3, [r2]
 276:core/src/system_stm32f3xx.c **** }
 115              		.loc 1 276 1 view .LVU24
 116 0034 7047     		bx	lr
 117              	.LVL7:
 118              	.L5:
 233:core/src/system_stm32f3xx.c ****       break;
 119              		.loc 1 233 7 is_stmt 1 view .LVU25
 233:core/src/system_stm32f3xx.c ****       break;
 120              		.loc 1 233 23 is_stmt 0 view .LVU26
ARM GAS  /tmp/cchpvgnZ.s 			page 8


 121 0036 114B     		ldr	r3, .L11+4
 122              	.LVL8:
 233:core/src/system_stm32f3xx.c ****       break;
 123              		.loc 1 233 23 view .LVU27
 124 0038 114A     		ldr	r2, .L11+8
 125 003a 1A60     		str	r2, [r3]
 234:core/src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 126              		.loc 1 234 7 is_stmt 1 view .LVU28
 127 003c F0E7     		b	.L8
 128              	.LVL9:
 129              	.L6:
 237:core/src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 130              		.loc 1 237 7 view .LVU29
 237:core/src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 131              		.loc 1 237 20 is_stmt 0 view .LVU30
 132 003e 0E4A     		ldr	r2, .L11
 133 0040 5368     		ldr	r3, [r2, #4]
 134              	.LVL10:
 238:core/src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 135              		.loc 1 238 7 is_stmt 1 view .LVU31
 238:core/src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 136              		.loc 1 238 22 is_stmt 0 view .LVU32
 137 0042 5268     		ldr	r2, [r2, #4]
 138              	.LVL11:
 239:core/src/system_stm32f3xx.c **** 
 139              		.loc 1 239 7 is_stmt 1 view .LVU33
 239:core/src/system_stm32f3xx.c **** 
 140              		.loc 1 239 27 is_stmt 0 view .LVU34
 141 0044 C3F38343 		ubfx	r3, r3, #18, #4
 142              	.LVL12:
 239:core/src/system_stm32f3xx.c **** 
 143              		.loc 1 239 15 view .LVU35
 144 0048 0233     		adds	r3, r3, #2
 145              	.LVL13:
 254:core/src/system_stm32f3xx.c ****       {
 146              		.loc 1 254 7 is_stmt 1 view .LVU36
 254:core/src/system_stm32f3xx.c ****       {
 147              		.loc 1 254 10 is_stmt 0 view .LVU37
 148 004a 12F4803F 		tst	r2, #65536
 149 004e 05D1     		bne	.L9
 257:core/src/system_stm32f3xx.c ****       }
 150              		.loc 1 257 9 is_stmt 1 view .LVU38
 257:core/src/system_stm32f3xx.c ****       }
 151              		.loc 1 257 44 is_stmt 0 view .LVU39
 152 0050 0D4A     		ldr	r2, .L11+16
 153              	.LVL14:
 257:core/src/system_stm32f3xx.c ****       }
 154              		.loc 1 257 44 view .LVU40
 155 0052 02FB03F3 		mul	r3, r2, r3
 156              	.LVL15:
 257:core/src/system_stm32f3xx.c ****       }
 157              		.loc 1 257 25 view .LVU41
 158 0056 094A     		ldr	r2, .L11+4
 159 0058 1360     		str	r3, [r2]
 160 005a E1E7     		b	.L8
 161              	.LVL16:
 162              	.L9:
ARM GAS  /tmp/cchpvgnZ.s 			page 9


 261:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 163              		.loc 1 261 9 is_stmt 1 view .LVU42
 261:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 164              		.loc 1 261 28 is_stmt 0 view .LVU43
 165 005c 064A     		ldr	r2, .L11
 166              	.LVL17:
 261:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 167              		.loc 1 261 28 view .LVU44
 168 005e D26A     		ldr	r2, [r2, #44]
 261:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 169              		.loc 1 261 36 view .LVU45
 170 0060 02F00F02 		and	r2, r2, #15
 261:core/src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 171              		.loc 1 261 22 view .LVU46
 172 0064 511C     		adds	r1, r2, #1
 173              	.LVL18:
 263:core/src/system_stm32f3xx.c ****       }
 174              		.loc 1 263 9 is_stmt 1 view .LVU47
 263:core/src/system_stm32f3xx.c ****       }
 175              		.loc 1 263 38 is_stmt 0 view .LVU48
 176 0066 064A     		ldr	r2, .L11+8
 177 0068 B2FBF1F2 		udiv	r2, r2, r1
 263:core/src/system_stm32f3xx.c ****       }
 178              		.loc 1 263 54 view .LVU49
 179 006c 02FB03F3 		mul	r3, r2, r3
 180              	.LVL19:
 263:core/src/system_stm32f3xx.c ****       }
 181              		.loc 1 263 25 view .LVU50
 182 0070 024A     		ldr	r2, .L11+4
 183 0072 1360     		str	r3, [r2]
 184 0074 D4E7     		b	.L8
 185              	.L12:
 186 0076 00BF     		.align	2
 187              	.L11:
 188 0078 00100240 		.word	1073876992
 189 007c 00000000 		.word	.LANCHOR0
 190 0080 00127A00 		.word	8000000
 191 0084 00000000 		.word	.LANCHOR1
 192 0088 00093D00 		.word	4000000
 193              		.cfi_endproc
 194              	.LFE131:
 196              		.global	APBPrescTable
 197              		.global	AHBPrescTable
 198              		.global	SystemCoreClock
 199              		.section	.data.SystemCoreClock,"aw"
 200              		.align	2
 201              		.set	.LANCHOR0,. + 0
 204              	SystemCoreClock:
 205 0000 00127A00 		.word	8000000
 206              		.section	.rodata.AHBPrescTable,"a"
 207              		.align	2
 208              		.set	.LANCHOR1,. + 0
 211              	AHBPrescTable:
 212 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 212      00000000 
 212      01020304 
 212      06
ARM GAS  /tmp/cchpvgnZ.s 			page 10


 213 000d 070809   		.ascii	"\007\010\011"
 214              		.section	.rodata.APBPrescTable,"a"
 215              		.align	2
 218              	APBPrescTable:
 219 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 219      01020304 
 220              		.text
 221              	.Letext0:
 222              		.file 2 "/opt/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
 223              		.file 3 "/opt/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 224              		.file 4 "CMSIS/Include/core_cm4.h"
 225              		.file 5 "CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 226              		.file 6 "CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
ARM GAS  /tmp/cchpvgnZ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f3xx.c
     /tmp/cchpvgnZ.s:20     .text.SystemInit:0000000000000000 $t
     /tmp/cchpvgnZ.s:26     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cchpvgnZ.s:45     .text.SystemInit:0000000000000010 $d
     /tmp/cchpvgnZ.s:50     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cchpvgnZ.s:56     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cchpvgnZ.s:188    .text.SystemCoreClockUpdate:0000000000000078 $d
     /tmp/cchpvgnZ.s:218    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/cchpvgnZ.s:211    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cchpvgnZ.s:204    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cchpvgnZ.s:200    .data.SystemCoreClock:0000000000000000 $d
     /tmp/cchpvgnZ.s:207    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/cchpvgnZ.s:215    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
